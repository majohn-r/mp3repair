package files

import (
	"testing"
)

func TestIsIllegalRuneForFileNames(t *testing.T) {
	tests := map[string]struct {
		r    rune
		want bool
	}{
		"_0":    {r: 0, want: true},
		"_1":    {r: 1, want: true},
		"_2":    {r: 2, want: true},
		"_3":    {r: 3, want: true},
		"_4":    {r: 4, want: true},
		"_5":    {r: 5, want: true},
		"_6":    {r: 6, want: true},
		"_7":    {r: 7, want: true},
		"_8":    {r: 8, want: true},
		"_9":    {r: 9, want: true},
		"10":    {r: 10, want: true},
		"11":    {r: 11, want: true},
		"12":    {r: 12, want: true},
		"13":    {r: 13, want: true},
		"14":    {r: 14, want: true},
		"15":    {r: 15, want: true},
		"16":    {r: 16, want: true},
		"17":    {r: 17, want: true},
		"18":    {r: 18, want: true},
		"19":    {r: 19, want: true},
		"20":    {r: 20, want: true},
		"21":    {r: 21, want: true},
		"22":    {r: 22, want: true},
		"23":    {r: 23, want: true},
		"24":    {r: 24, want: true},
		"25":    {r: 25, want: true},
		"26":    {r: 26, want: true},
		"27":    {r: 27, want: true},
		"28":    {r: 28, want: true},
		"29":    {r: 29, want: true},
		"30":    {r: 30, want: true},
		"31":    {r: 31, want: true},
		"<":     {r: '<', want: true},
		">":     {r: '>', want: true},
		":":     {r: ':', want: true},
		"\"":    {r: '"', want: true},
		"/":     {r: '/', want: true},
		"\\":    {r: '\\', want: true},
		"|":     {r: '|', want: true},
		"?":     {r: '?', want: true},
		"*":     {r: '*', want: true},
		"!":     {r: '!', want: false},
		"#":     {r: '#', want: false},
		"$":     {r: '$', want: false},
		"&":     {r: '&', want: false},
		"'":     {r: '\'', want: false},
		"(":     {r: '(', want: false},
		")":     {r: ')', want: false},
		"+":     {r: '+', want: false},
		",":     {r: ',', want: false},
		"-":     {r: '-', want: false},
		".":     {r: '.', want: false},
		"0":     {r: '0', want: false},
		"1":     {r: '1', want: false},
		"2":     {r: '2', want: false},
		"3":     {r: '3', want: false},
		"4":     {r: '4', want: false},
		"5":     {r: '5', want: false},
		"6":     {r: '6', want: false},
		"7":     {r: '7', want: false},
		"8":     {r: '8', want: false},
		"9":     {r: '9', want: false},
		";":     {r: ';', want: false},
		"A":     {r: 'A', want: false},
		"B":     {r: 'B', want: false},
		"C":     {r: 'C', want: false},
		"D":     {r: 'D', want: false},
		"E":     {r: 'E', want: false},
		"F":     {r: 'F', want: false},
		"G":     {r: 'G', want: false},
		"H":     {r: 'H', want: false},
		"I":     {r: 'I', want: false},
		"J":     {r: 'J', want: false},
		"K":     {r: 'K', want: false},
		"L":     {r: 'L', want: false},
		"M":     {r: 'M', want: false},
		"N":     {r: 'N', want: false},
		"O":     {r: 'O', want: false},
		"P":     {r: 'P', want: false},
		"Q":     {r: 'Q', want: false},
		"R":     {r: 'R', want: false},
		"S":     {r: 'S', want: false},
		"T":     {r: 'T', want: false},
		"U":     {r: 'U', want: false},
		"V":     {r: 'V', want: false},
		"W":     {r: 'W', want: false},
		"X":     {r: 'X', want: false},
		"Y":     {r: 'Y', want: false},
		"Z":     {r: 'Z', want: false},
		"[":     {r: '[', want: false},
		"]":     {r: ']', want: false},
		"_":     {r: '_', want: false},
		"a":     {r: 'a', want: false},
		"b":     {r: 'b', want: false},
		"c":     {r: 'c', want: false},
		"d":     {r: 'd', want: false},
		"e":     {r: 'e', want: false},
		"f":     {r: 'f', want: false},
		"g":     {r: 'g', want: false},
		"h":     {r: 'h', want: false},
		"i":     {r: 'i', want: false},
		"j":     {r: 'j', want: false},
		"k":     {r: 'k', want: false},
		"l":     {r: 'l', want: false},
		"m":     {r: 'm', want: false},
		"n":     {r: 'n', want: false},
		"o":     {r: 'o', want: false},
		"p":     {r: 'p', want: false},
		"q":     {r: 'q', want: false},
		"r":     {r: 'r', want: false},
		"s":     {r: 's', want: false},
		"space": {r: ' ', want: false},
		"t":     {r: 't', want: false},
		"u":     {r: 'u', want: false},
		"v":     {r: 'v', want: false},
		"w":     {r: 'w', want: false},
		"x":     {r: 'x', want: false},
		"y":     {r: 'y', want: false},
		"z":     {r: 'z', want: false},
		"Á":     {r: 'Á', want: false},
		"È":     {r: 'È', want: false},
		"É":     {r: 'É', want: false},
		"Ô":     {r: 'Ô', want: false},
		"à":     {r: 'à', want: false},
		"á":     {r: 'á', want: false},
		"ã":     {r: 'ã', want: false},
		"ä":     {r: 'ä', want: false},
		"å":     {r: 'å', want: false},
		"ç":     {r: 'ç', want: false},
		"è":     {r: 'è', want: false},
		"é":     {r: 'é', want: false},
		"ê":     {r: 'ê', want: false},
		"ë":     {r: 'ë', want: false},
		"í":     {r: 'ë', want: false},
		"î":     {r: 'î', want: false},
		"ï":     {r: 'ï', want: false},
		"ñ":     {r: 'ñ', want: false},
		"ò":     {r: 'ò', want: false},
		"ó":     {r: 'ó', want: false},
		"ô":     {r: 'ô', want: false},
		"ö":     {r: 'ö', want: false},
		"ø":     {r: 'ø', want: false},
		"ù":     {r: 'ù', want: false},
		"ú":     {r: 'ú', want: false},
		"ü":     {r: 'ü', want: false},
		"ř":     {r: 'ř', want: false},
		"…":     {r: '…', want: false},
	}
	for name, tt := range tests {
		t.Run(name, func(t *testing.T) {
			if got := IsIllegalRuneForFileNames(tt.r); got != tt.want {
				t.Errorf("IsIllegalRuneForFileNames = %v, want %v", got, tt.want)
			}
		})
	}
}
